/*
 * generated by Xtext
 */
package org.example.entities.validation

import org.eclipse.xtext.validation.Check
import org.example.entities.entities.Attribute
import org.example.entities.entities.EntitiesPackage
import org.example.entities.entities.Entity

//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class EntitiesValidator extends AbstractEntitiesValidator {

	public static val HIERARCHY_CYCLE = "org.example.entities.HierarchyCycle";
	public static val INVALID_ENTITY_NAME = "org.example.entities.InvalidEntityName";
	public static val INVALID_ATTRIBUTE_NAME = "org.example.entities.InvalidAttributeName";

	@Check
	def checkNoCycleInEntityHierarchy(Entity entity) {
		if (entity.superType == null)
			return // nothing to check
		val visitedEntities = <Entity>newHashSet()
		visitedEntities.add(entity)
		var current = entity.superType
		while (current != null) {
			if (visitedEntities.contains(current)) {
				error("cycle in hierarchy of entity '" + current.name + "'",
					EntitiesPackage::eINSTANCE.entity_SuperType, HIERARCHY_CYCLE, current.superType.name)
				return
			}
			visitedEntities.add(current)
			current = current.superType
		}
	}

	@Check
	def checkEntityNameStartsWithCapital(Entity entity) {

		if (entity.name.toLowerCase.charAt(0) == entity.name.charAt(0))
			warning("Entity name should start with a capital letter", EntitiesPackage::eINSTANCE.entity_Name,
				INVALID_ENTITY_NAME, entity.name)
	}

	@Check
	def checkAttributeNameStartsWithLowercase(Attribute attr) {
		if (attr.name.toUpperCase.charAt(0) == attr.name.charAt(0))
			warning("Attribute name should start with a lowercase", EntitiesPackage::eINSTANCE.attribute_Name,
				INVALID_ATTRIBUTE_NAME, attr.name)
	}
}
